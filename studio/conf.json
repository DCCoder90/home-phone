{
    "description": "A New Flow",
    "states": [
      {
        "name": "Trigger",
        "type": "trigger",
        "transitions": [
          {
            "event": "incomingMessage"
          },
          {
            "next": "split_1",
            "event": "incomingCall"
          },
          {
            "event": "incomingConversationMessage"
          },
          {
            "event": "incomingRequest"
          },
          {
            "event": "incomingParent"
          }
        ],
        "properties": {
          "offset": {
            "x": 0,
            "y": 0
          }
        }
      },
      {
        "name": "split_1",
        "type": "split-based-on",
        "transitions": [
          {
            "next": "function_4",
            "event": "noMatch"
          },
          {
            "next": "function_2",
            "event": "match",
            "conditions": [
              {
                "friendly_name": "If value equal_to personal_number",
                "arguments": [
                  "{{trigger.call.From}}"
                ],
                "type": "equal_to",
                "value": "+MY_PHONE_NUMBER"
              }
            ]
          }
        ],
        "properties": {
          "input": "{{trigger.call.From}}",
          "offset": {
            "x": 110,
            "y": 140
          }
        }
      },
      {
        "name": "gather_1",
        "type": "gather-input-on-call",
        "transitions": [
          {
            "next": "split_2",
            "event": "keypress"
          },
          {
            "event": "speech"
          },
          {
            "event": "timeout"
          }
        ],
        "properties": {
          "speech_timeout": "5",
          "offset": {
            "x": 680,
            "y": 1270
          },
          "loop": 1,
          "finish_on_key": "#",
          "say": "Welcome. Please enter your monitoring access code.",
          "language": "en-US",
          "stop_gather": true,
          "gather_language": "en",
          "speech_model": "default",
          "timeout": 5
        }
      },
      {
        "name": "split_2",
        "type": "split-based-on",
        "transitions": [
          {
            "event": "noMatch"
          },
          {
            "next": "function_3",
            "event": "match",
            "conditions": [
              {
                "friendly_name": "If value equal_to code",
                "arguments": [
                  "{{widgets.gather_1.Digits}}"
                ],
                "type": "equal_to",
                "value": "SUPER_SECRET_CODE"
              }
            ]
          }
        ],
        "properties": {
          "input": "{{widgets.gather_1.Digits}}",
          "offset": {
            "x": 770,
            "y": 1540
          }
        }
      },
      {
        "name": "gather_2",
        "type": "gather-input-on-call",
        "transitions": [
          {
            "next": "split_4",
            "event": "keypress"
          },
          {
            "event": "speech"
          },
          {
            "event": "timeout"
          }
        ],
        "properties": {
          "speech_timeout": "5",
          "offset": {
            "x": 910,
            "y": 780
          },
          "loop": 1,
          "finish_on_key": "#",
          "say": "To monitor press 8. To connect press 1.",
          "language": "en-US",
          "stop_gather": true,
          "gather_language": "en",
          "speech_model": "default",
          "timeout": 5
        }
      },
      {
        "name": "split_4",
        "type": "split-based-on",
        "transitions": [
          {
            "event": "noMatch"
          },
          {
            "next": "function_1",
            "event": "match",
            "conditions": [
              {
                "friendly_name": "If value equal_to 1",
                "arguments": [
                  "{{widgets.gather_2.Digits}}"
                ],
                "type": "equal_to",
                "value": "1"
              }
            ]
          },
          {
            "next": "gather_1",
            "event": "match",
            "conditions": [
              {
                "friendly_name": "If value equal_to 8",
                "arguments": [
                  "{{widgets.gather_2.Digits}}"
                ],
                "type": "equal_to",
                "value": "8"
              }
            ]
          }
        ],
        "properties": {
          "input": "{{widgets.gather_2.Digits}}",
          "offset": {
            "x": 510,
            "y": 1040
          }
        }
      },
      {
        "name": "function_1",
        "type": "run-function",
        "transitions": [
          {
            "event": "success"
          },
          {
            "event": "fail"
          }
        ],
        "properties": {
          "service_sid": "",
          "environment_sid": "",
          "offset": {
            "x": 80,
            "y": 870
          },
          "function_sid": "",
          "parameters": [
            {
              "value": "{{trigger.call.From}}",
              "key": "from"
            }
          ],
          "url": "https://URL/connect-to-sip-endpoint"
        }
      },
      {
        "name": "function_2",
        "type": "run-function",
        "transitions": [
          {
            "next": "split_3",
            "event": "success"
          },
          {
            "event": "fail"
          }
        ],
        "properties": {
          "service_sid": "",
          "environment_sid": "",
          "offset": {
            "x": 690,
            "y": 260
          },
          "function_sid": "",
          "url": "https://URL/conference-exists"
        }
      },
      {
        "name": "split_3",
        "type": "split-based-on",
        "transitions": [
          {
            "next": "function_1",
            "event": "noMatch"
          },
          {
            "next": "function_1",
            "event": "match",
            "conditions": [
              {
                "friendly_name": "If value equal_to false",
                "arguments": [
                  "{{widgets.function_2.body}}"
                ],
                "type": "equal_to",
                "value": "false"
              }
            ]
          },
          {
            "next": "gather_2",
            "event": "match",
            "conditions": [
              {
                "friendly_name": "If value equal_to true",
                "arguments": [
                  "{{widgets.function_2.body}}"
                ],
                "type": "equal_to",
                "value": "true"
              }
            ]
          }
        ],
        "properties": {
          "input": "{{widgets.function_2.body}}",
          "offset": {
            "x": 710,
            "y": 550
          }
        }
      },
      {
        "name": "function_3",
        "type": "run-function",
        "transitions": [
          {
            "event": "success"
          },
          {
            "event": "fail"
          }
        ],
        "properties": {
          "service_sid": "",
          "environment_sid": "",
          "offset": {
            "x": 980,
            "y": 1730
          },
          "function_sid": "",
          "url": "https://URL/connect-monitor-to-conf"
        }
      },
      {
        "name": "function_4",
        "type": "run-function",
        "transitions": [
          {
            "next": "split_5",
            "event": "success"
          },
          {
            "event": "fail"
          }
        ],
        "properties": {
          "service_sid": "",
          "environment_sid": "",
          "offset": {
            "x": 80,
            "y": 390
          },
          "function_sid": "",
          "parameters": [
            {
              "value": "{{trigger.call.From}}",
              "key": "From"
            }
          ],
          "url": "https://URL/is-whitelisted"
        }
      },
      {
        "name": "split_5",
        "type": "split-based-on",
        "transitions": [
          {
            "event": "noMatch"
          },
          {
            "next": "say_play_1",
            "event": "match",
            "conditions": [
              {
                "friendly_name": "If value equal_to false",
                "arguments": [
                  "{{widgets.function_4.parsed.isWhitelisted}}"
                ],
                "type": "equal_to",
                "value": "false"
              }
            ]
          },
          {
            "next": "function_1",
            "event": "match",
            "conditions": [
              {
                "friendly_name": "If value equal_to true",
                "arguments": [
                  "{{widgets.function_4.parsed.isWhitelisted}}"
                ],
                "type": "equal_to",
                "value": "true"
              }
            ]
          }
        ],
        "properties": {
          "input": "{{widgets.function_4.parsed.isWhitelisted}}",
          "offset": {
            "x": -330,
            "y": 570
          }
        }
      },
      {
        "name": "say_play_1",
        "type": "say-play",
        "transitions": [
          {
            "event": "audioComplete"
          }
        ],
        "properties": {
          "offset": {
            "x": -420,
            "y": 860
          },
          "loop": 1,
          "say": "Only listed numbers allowed.  Contact phone owner to be added."
        }
      }
    ],
    "initial_state": "Trigger",
    "flags": {
      "allow_concurrent_calls": true
    }
  }